[meta title:"HCI Group 23 Interactive Report" /]

[Header
  fullWidth:true
  title:"Employee Management System"
  subtitle:"HCI Group 23 Interactive Report"
  author:"Group 23"
  authorLink:"https://github.com/uwohci23/group-23"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]
[div]
	[Aside]
	
		[SVG src:"static/images/github-mark.svg" /]
		#Github Repositories
		
			[div className:'div_padding']
				[ul]
					[li][a href:'https://github.com/uwohci23/group-23/'] Employee Management System Repository[/a][/li]
					[li][a href:'https://github.com/GermanBeast7/GermanBeast7.github.io/'] Interactive Webpage[/a][/li]
				[/ul]
			[/div]
		
	[/Aside]
	# Executive Summary
	[p]Likely Have some interactive part. Currently just same executive summary as design report. Need to probably edit in regards to the feedback and any updated design[/p]
	
	[p className:'text-justification']
			The application we are designing an interface for is a command line based employee
management system. This system has basic functionality such as hour tracking and user
management for all employees along with higher level management functions for sysadmins which
can add new users, teams, and projects along with managers who have unique functions to manage
their team such as adding and removing team members, and editing team member work hours such
as for cases such as employee absence. Our goal with the design of this system is to create a web
based user interface that is intuitive to use and therefore can be used without much previous
instruction which is important in cases where such an interface is rolled out to a company with
many employees. To make our interface this intuitive we will be making use of the users existing
knowledge of similar systems and the outside world to make features visible and at a glance
understandable to minimize the gulfs of execution and evaluation. Starting at the login page we
will use the users existing understanding of how to use a login page by making it similar to most
common login pages. From there, the user is directed to a screen with their functionality on the
left hand side. Left side function selection is another common aspect of existing web interfaces so
we are making use of the users frames for this as well. This increases the visibility of the function
selection since people will be used to looking there to find function selection. Since there are three
types of users, each with some shared and some unique functions, to allow easy adaption to
employee promotions, we made the shared functions all at the top of the left hand selection, and
all in the same order. This way if an employee is promoted to manager or sysadmin, the functions
they are used to will still be in the same spot reducing the need to re-learn the interface. All
functions will include a written description on their topic to make it clearly visible what can be
done on each tab. The shared functions also include icons so that they can easily be used by
employees who may not understand the written function description. These icons such as a
magnifying glass for searching other employees will make use of the users familiarity with what
can be such as a magnifying glass can be used to search for something in the physical world and
in many interfaces symbolizes a search function. Tabs will also highlight color while the user is
within that tab so the user can be sure they are in the tab they mean to be in. We also made use of
combining similar functions under one tab to avoid over cluttering the navigation tab reducing the
likelihood of accidental clicks on the wrong tab such as by combining all team management
features of the manager under a team management tab instead of having one tab for each feature.
Within the features we also make use of the users frames along with the other design principles
such as affordances and transfer to make it clear what results will occur from the users actions. For
example in the managers UI under the team management tab which combines the add employee
to team, remove employee from team, and set team project functions, each function has hints to
make results of actions more clear to the user. To start off, knowing the user just selected the tab
on the left side, we set the less destructive functions closer to the left side which is to add
employees. This should reduce any accidental removals of team members since the user would
have to be more intentional about going to the other side of the screen for that functionality. For
both the add employee and remove employee, as the employee ID is being typed, the text box will
have a drop down autocomplete with relevant valid ID’s. Through this, if the user gets to the end
of the ID and there are no ID’s auto completing it gives a clear hint that the ID entered will not be
a valid value and the text can be highlighted red. For the team project editing portion, the box can
start off green with the current project value, and then turn yellow once edited if the new project
ID is valid indicating to the user to slow down and check their work before submitting to avoid
errors or turn red if the new ID is invalid indicating that the user has to stop and fix something
with the change before submitting. This highlighting will provide some transference to the user
with how stop lights work, with green meaning you are good to go or nothing has changed, yellow
meaning you can go but be careful as a change is about to occur, and red meaning stop and don’t
proceed with the change indicating something isn’t valid. Using the design principles for all
features such as this with high visibility, clear affordances, and transference, we will make our
interface intuitive to use with minimal or no training and just pre-existing knowledge. 
	[/p]
	
	
	# Navigation Map
	### Map Pieces and Short Description
	[p]Maybe include stepper with pictures and explanation text on each, put graphics for 2 in but giving odd parsing error[/p]
	
	### Full Map
	[p]Tried to add custom component with React to allow zoom, Idyll supports but couldn't quite get in correct form to use component.
	May need to still update depending on our final redesign and what we get. Thoughts to make easier to read in browser possbily make sections
	that can still tell what is going on. Or zoom of some kind.
	[/p]
	[Graphic]
		[img src: "static/images/group23-storyboard.png" /]
	[/Graphic]
	
	# Design Principles
	[var name:"displayedPrinciple" value:1 /]
	[var name:"totalPrinciples" value:20 /]
	
	[div className:'buttons']
		[Conditional if:`displayedPrinciple > 1`]
			[div className:'button_left']
				[Button onClick:`displayedPrinciple = displayedPrinciple - 1`]
					[Display value:'Previous' /]
				[/Button]
			[/div]
		[/Conditional]
		[div className:'align_center']
			Principle [Display value:displayedPrinciple format:'0.0f' /] of [Display value:totalPrinciples format:'0.0f' /]
		[/div]
		[Conditional if:`displayedPrinciple < totalPrinciples`]
			[div className:'button_right']
				[Button onClick:`displayedPrinciple = displayedPrinciple + 1`]
					[Display value:'Next' /]
				[/Button]
			[/div]
		[/Conditional]
	[/div]
	
		
	[Conditional if:`displayedPrinciple == 1`]
		[div className:'design_principles_background']
			[p] First Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 2`]
		[div className:'design_principles_background']
			[p] 2 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 3`]
		[div className:'design_principles_background']
			[p] 3 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 4`]
		[div className:'design_principles_background']
			[p] 4 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 5`]
		[div className:'design_principles_background']
			[p] 5 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 6`]
		[div className:'design_principles_background']
			[p] 6 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 7`]
		[div className:'design_principles_background']
			[p] 7 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 8`]
		[div className:'design_principles_background']
			[p] 8 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 9`]
		[div className:'design_principles_background']
			[p] 9 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 10`]
		[div className:'design_principles_background']
			[p] 10 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 11`]
		[div className:'design_principles_background']
			[p] 11 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 12`]
		[div className:'design_principles_background']
			[p] 12 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 13`]
		[div className:'design_principles_background']
			[p] 13 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 14`]
		[div className:'design_principles_background']
			[p] 14 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 15`]
		[div className:'design_principles_background']
			[p] 15 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 16`]
		[div className:'design_principles_background']
			[p] 16 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 17`]
		[div className:'design_principles_background']
			[p] 17 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 18`]
		[div className:'design_principles_background']
			[p] 18 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 19`]
		[div className:'design_principles_background']
			[p] 19 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
		
	[Conditional if:`displayedPrinciple == 20`]
		[div className:'design_principles_background']
			[p] 20 Principle and text, should be able to have any html emements or Idyll components[/p]
		[/div]
	[/Conditional]
	
	# Heuristic Evaluation
	[p]Test Text[/p]
	
	#Improvement Recomendations
	[p]Test Text[/p] 
[/div]

